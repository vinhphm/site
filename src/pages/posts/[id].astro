---
import type { CollectionEntry } from 'astro:content'
import { getCollection, render } from 'astro:content'
import PostMeta from '@/components/PostMeta.astro'
import Layout from '@/layouts/Layout.astro'

export async function getStaticPaths() {
  const posts = await getCollection('posts')
  return posts.map(post => ({
    params: { id: post.id },
    props: post,
  }))
}

type Props = CollectionEntry<'posts'>

const post = Astro.props
const { Content } = await render(post)

const structuredData = {
  '@context': 'https://schema.org',
  '@type': 'BlogPosting',
  'headline': post.data.title,
  'description': post.data.description,
  'image': post.data.image,
  'author': {
    '@type': 'Person',
    'name': 'Vinh',
  },
  'datePublished': post.data.publishedAt.toISOString(),
  ...(post.data.updatedAt && { dateModified: post.data.updatedAt.toISOString() }),
}
---

<Layout
  title={post.data.title}
  description={post.data.description}
  image={post.data.image}
>
  <script type="application/ld+json" set:html={JSON.stringify(structuredData)} slot="structured-data" />

  <div class="mb-5">
    <h1
      class="text-xl font-medium mb-5"
      transition:name={`post-title-${post.id}`}
    >
      {post.data.title}
    </h1>
    <PostMeta post={post} />
  </div>
  <article>
    <Content />
  </article>
</Layout>
