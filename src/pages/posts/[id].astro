---
import type { CollectionEntry } from 'astro:content'
import Indicator from '@components/Indicator.astro'
import Layout from '@layouts/Layout.astro'
import { formatDate } from '@lib/utils'
import { getCollection, render } from 'astro:content'

export async function getStaticPaths() {
  const posts = await getCollection('posts')
  return posts.map(post => ({
    params: { id: post.id },
    props: post,
  }))
}
type Props = CollectionEntry<'posts'>

const post = Astro.props
const { Content } = await render(post)
---

<Layout
  title={post.data.title}
  description={post.data.description}
  image={post.data.image}
>
  <div class="mb-5">
    <h1 class="text-xl font-medium mb-5" transition:name={`post-title-${post.id}`}>
      {post.data.title}
    </h1>
    <div class="font-medium text-gray-500 dark:text-zinc-500 flex items-center gap-2">
      <span title={`Published on ${formatDate(post.data.createdDate)}`}>{formatDate(post.data.createdDate)}</span>
      {post.data.updatedDate && (
        <Indicator alwaysShowLabel>
          Updated on {formatDate(post.data.updatedDate)}
        </Indicator>
      )}
    </div>
  </div>
  <article>
    <Content />
  </article>
</Layout>
