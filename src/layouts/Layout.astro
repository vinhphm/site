---
import { ClientRouter } from "astro:transitions"
import Header from "@/components/Header.astro"
import Footer from "@/components/Footer.astro"
import { cn } from "@/lib/utils"
import config from "@/config"
import "@/styles/global.css"

interface Props {
  title?: string
  description: string
  image?: string
  className?: string
  headerClassName?: string
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site)

const {
  description,
  image,
  className,
  headerClassName = "mb-8",
} = Astro.props

const defaultImage = `${config.workerHost}/og?title=${encodeURIComponent(
    Astro.props.title || '',
  )}`

const imageToUse = image || defaultImage

const title = [Astro.props.title, config.title].filter(Boolean).join(' / ')

const resolvedImage = new URL(imageToUse, Astro.site).toString()
---

<html lang="en">
  <head>
    <!-- Global Metadata -->
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <link rel="icon" href="/favicon.ico" sizes="48x48" >
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <!-- <link rel="apple-touch-icon" href="/apple-touch-icon.png"/> -->
    <link rel="sitemap" href="/sitemap-index.xml" />
    <link rel="alternate" type="application/rss+xml" href="/rss.xml" title="RSS" />
    <meta name="generator" content={Astro.generator} />

    <!-- Canonical URL -->
    <link rel="canonical" href={canonicalURL} />

    <!-- Primary Meta Tags -->
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    {resolvedImage && <meta property="og:image" content={resolvedImage} />}

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={Astro.url} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    {
      resolvedImage && (
        <meta property="twitter:image" content={resolvedImage} />
      )
    }

    <ClientRouter />
  </head>
  <body
    class="font-sans text-gray-900 bg-white antialiased tracking-tight transition-colors dark:bg-zinc-950 dark:text-zinc-200"
  >
    <div class={cn("px-8 py-4 mx-auto", className)}>
      <main class="max-w-[60ch] mx-auto w-full space-y-6">
        <Header className={headerClassName} />
        <slot />
        <Footer />
      </main>
    </div>
  </body>
</html>

<script is:inline>
  function preloadTheme() {
    const prefersDark =
      window.matchMedia &&
      window.matchMedia('(prefers-color-scheme: dark)').matches
    const setting = localStorage.getItem('color-scheme') || 'auto'

    if (setting === 'dark' || (prefersDark && setting !== 'light'))
      document.documentElement.classList.toggle('dark', true)
  }

  document.addEventListener("astro:after-swap", () => preloadTheme())
  preloadTheme()
</script>
